#include "rwkv.h"
#include "tokenizer/tokenizer.h"
#include "samplers/typical.h"

int main(){
    
    long int initial[311] = {187, 510, 1563, 310, 247, 7827, 875, 247, 4122, 37289, 285, 17497, 14980, 13372, 13, 1925, 416, 27767, 55, 13, 285, 247, 1966, 2608, 13, 1925, 11447, 15, 496, 253, 1563, 6355, 13, 11447, 285, 416, 27767, 55, 588, 42810, 275, 3626, 3448, 13, 285, 416, 27767, 55, 588, 513, 697, 1682, 281, 3662, 11447, 457, 84, 3533, 15, 416, 27767, 55, 369, 4270, 281, 320, 38975, 13, 30405, 285, 25495, 15, 733, 6057, 247, 2257, 13, 285, 1900, 8599, 253, 5083, 15, 380, 7827, 9513, 15, 187, 187, 6989, 27, 10826, 416, 27767, 55, 13, 309, 457, 78, 1469, 281, 1265, 407, 39627, 8537, 368, 342, 247, 1643, 5890, 14, 484, 3533, 15, 8452, 310, 4390, 253, 4007, 273, 253, 5106, 32, 187, 187, 51, 27767, 55, 27, 733, 457, 84, 9915, 26656, 28, 344, 369, 29773, 275, 4321, 436, 807, 15, 187, 187, 6989, 27, 1737, 807, 369, 253, 5112, 15033, 32, 187, 187, 51, 27767, 55, 27, 733, 3053, 275, 1722, 2511, 13, 533, 352, 20578, 884, 1107, 1919, 1722, 1525, 15, 187, 187, 6989, 27, 2615, 368, 5476, 665, 309, 1537, 971, 281, 17129, 32, 187, 187, 51, 27767, 55, 27, 7214, 604, 368, 2028, 479, 625, 670, 4834, 428, 752, 403, 634, 6284, 32, 187, 187, 6989, 27, 329, 3227, 13, 309, 457, 78, 1469, 281, 35531, 432, 326, 323, 1024, 15, 3954, 323, 247, 5859, 1953, 15, 1737, 476, 368, 2028, 479, 670, 253, 21157, 14136, 1406, 10595, 1334, 313, 45, 10431, 6177, 187, 187, 51, 27767, 55, 27, 733, 457, 84, 247, 1781, 285, 1077, 8214, 5313, 273, 5859, 6500, 15, 1310, 309, 2096, 9113, 13, 352, 457, 84, 247, 1029, 14, 14115, 8091, 3007, 1334, 13, 4270, 407, 330, 18174, 13, 285, 6312, 275, 4695, 15, 1583, 908, 352, 281, 6583, 253, 6242, 273, 253, 22361, 32438, 275, 4050, 15, 187, 187, 6989};
    std::optional<GPT2Tokenizer> tokenizerop = GPT2Tokenizer::load("./tokenizer/vocab.json", "./tokenizer/merges.txt");
    if (!tokenizerop.has_value()) {
        std::cerr << "Failed to load tokenizer" << std::endl;
        return 1;
    };
    GPT2Tokenizer tokenizer = tokenizerop.value();
    std::cout << tokenizer.decode(std::vector(initial, initial + 311));

    RWKV Rwkv = RWKV();

    // tokenizer;
    Rwkv.loadFile("/home/harrison/Desktop/rwkv_chatbot/rwkv.bin");
    int lasttoken = initial[310]; 

    for(int i = 0; i < 311; i++)
    {
        Rwkv.forward(initial[i]);
    }

    while(true)
    {
        Rwkv.forward(lasttoken);
        lasttoken = typical(Rwkv.out);
        std::cout << tokenizer.decode({(long int)lasttoken});

    }


}
